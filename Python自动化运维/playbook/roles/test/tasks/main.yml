- include_vars: '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'  # ansible 内部变量 
                                                                                           # :ansible_distribution
                                                                                           # :ansible_distribution_major_version

- name: echo cbd info
  shell: if [ -z {{ ansible_distribution }} ];then exit 1; else echo {{ ansible_distribution_major_version }}; fi;
  register: command_result
  failed_when: command_result.stdout == ""
  changed_when: False

- name: echo name info
  shell: if [ -z {{ name_a }} ];then exit 1; else echo {{ name_a }}; fi;
  register: result
  failed_when: result.rc == 1
  changed_when: result.rc == 0 or result.rc != 1

- debug: msg={{ result.stdout }}

- name: copy raid scripts 
  copy: src={{ item }} dest=/tmp/ owner=zabbix group=zabbix mode=0755
  with_fileglob:
   - MegaRAID_*

- name: write to file
  lineinfile:
   line: "zabbix\t\tALL=NOPASSWD:/opt/MegaRAID/storcli/storcli64"
   path: /etc/sudoers.d/zabbix
   state: present
   create: yes

- include: test5.yml

- name: update soduers file
  lineinfile:
   line: ""
   path: /etc/sudoers
   state: present
   regexp: "^Defaults.*requiretty"  # 当修改一行时，regexp通常应该匹配该行的初始状态及其被行替换后的状态，以确保其幂等性。
                                    # 对于state=present，如果找到要替换的模式。只有最后一行将被替换。
                                    # 对于state= absent，要删除的行模式。
                                    # 如果正则表达式不匹配，这一行将按照' insertbefore '或' insertafter '设置添加到文件中。
- name: set abc.txt
  lineinfile:
    line: "{{ item.line }}"
    path: "{{ item.file }}"
    state: present
    create: yes
    regexp: "{{ item.regex }}"
  with_items:
      - { regex: "^1.*", line: "Hello World", file: "/tmp/abc.txt" }
      - { regex: "^2.*", line: "Hello Lilei", file: "/tmp/abc.txt" }
      - { regex: "^3.*", line: "Hello Luci", file: "/tmp/abc.txt" }

- include: test7.yml

- name: config ssh conf and restarted sshd service
  lineinfile:
    line: "PasswordAuthentication no"
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication.*yes$"
    backrefs: yes
  notify: restart sshd   # 去 handlers 目录寻找 main.yml文件中 name: restart sshd 的task执行. 如果 task 没有实质改变，notify 不去执行handler

- meta: flush_handlers  # 立即执行上个task 所对应的 handler

- name: creates an entry like "0 5,2 * * *"
  cron:
    name: "check dirs"
    minute: "*/10"
    job: "/usr/bin/ls -lrt /tmp >>/tmp/1.log 2>&1"
    cron_file: testops
    user: root

